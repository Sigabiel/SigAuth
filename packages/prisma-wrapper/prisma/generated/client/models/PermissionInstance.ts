
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PermissionInstance` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model PermissionInstance
 * 
 */
export type PermissionInstanceModel = runtime.Types.Result.DefaultSelection<Prisma.$PermissionInstancePayload>

export type AggregatePermissionInstance = {
  _count: PermissionInstanceCountAggregateOutputType | null
  _avg: PermissionInstanceAvgAggregateOutputType | null
  _sum: PermissionInstanceSumAggregateOutputType | null
  _min: PermissionInstanceMinAggregateOutputType | null
  _max: PermissionInstanceMaxAggregateOutputType | null
}

export type PermissionInstanceAvgAggregateOutputType = {
  id: number | null
  accountId: number | null
  containerId: number | null
  appId: number | null
  assetId: number | null
}

export type PermissionInstanceSumAggregateOutputType = {
  id: number | null
  accountId: number | null
  containerId: number | null
  appId: number | null
  assetId: number | null
}

export type PermissionInstanceMinAggregateOutputType = {
  id: number | null
  accountId: number | null
  containerId: number | null
  appId: number | null
  identifier: string | null
  assetId: number | null
}

export type PermissionInstanceMaxAggregateOutputType = {
  id: number | null
  accountId: number | null
  containerId: number | null
  appId: number | null
  identifier: string | null
  assetId: number | null
}

export type PermissionInstanceCountAggregateOutputType = {
  id: number
  accountId: number
  containerId: number
  appId: number
  identifier: number
  assetId: number
  _all: number
}


export type PermissionInstanceAvgAggregateInputType = {
  id?: true
  accountId?: true
  containerId?: true
  appId?: true
  assetId?: true
}

export type PermissionInstanceSumAggregateInputType = {
  id?: true
  accountId?: true
  containerId?: true
  appId?: true
  assetId?: true
}

export type PermissionInstanceMinAggregateInputType = {
  id?: true
  accountId?: true
  containerId?: true
  appId?: true
  identifier?: true
  assetId?: true
}

export type PermissionInstanceMaxAggregateInputType = {
  id?: true
  accountId?: true
  containerId?: true
  appId?: true
  identifier?: true
  assetId?: true
}

export type PermissionInstanceCountAggregateInputType = {
  id?: true
  accountId?: true
  containerId?: true
  appId?: true
  identifier?: true
  assetId?: true
  _all?: true
}

export type PermissionInstanceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PermissionInstance to aggregate.
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PermissionInstances to fetch.
   */
  orderBy?: Prisma.PermissionInstanceOrderByWithRelationInput | Prisma.PermissionInstanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PermissionInstanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PermissionInstances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PermissionInstances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PermissionInstances
  **/
  _count?: true | PermissionInstanceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PermissionInstanceAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PermissionInstanceSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PermissionInstanceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PermissionInstanceMaxAggregateInputType
}

export type GetPermissionInstanceAggregateType<T extends PermissionInstanceAggregateArgs> = {
      [P in keyof T & keyof AggregatePermissionInstance]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePermissionInstance[P]>
    : Prisma.GetScalarType<T[P], AggregatePermissionInstance[P]>
}




export type PermissionInstanceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PermissionInstanceWhereInput
  orderBy?: Prisma.PermissionInstanceOrderByWithAggregationInput | Prisma.PermissionInstanceOrderByWithAggregationInput[]
  by: Prisma.PermissionInstanceScalarFieldEnum[] | Prisma.PermissionInstanceScalarFieldEnum
  having?: Prisma.PermissionInstanceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PermissionInstanceCountAggregateInputType | true
  _avg?: PermissionInstanceAvgAggregateInputType
  _sum?: PermissionInstanceSumAggregateInputType
  _min?: PermissionInstanceMinAggregateInputType
  _max?: PermissionInstanceMaxAggregateInputType
}

export type PermissionInstanceGroupByOutputType = {
  id: number
  accountId: number
  containerId: number | null
  appId: number
  identifier: string
  assetId: number | null
  _count: PermissionInstanceCountAggregateOutputType | null
  _avg: PermissionInstanceAvgAggregateOutputType | null
  _sum: PermissionInstanceSumAggregateOutputType | null
  _min: PermissionInstanceMinAggregateOutputType | null
  _max: PermissionInstanceMaxAggregateOutputType | null
}

type GetPermissionInstanceGroupByPayload<T extends PermissionInstanceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PermissionInstanceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PermissionInstanceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PermissionInstanceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PermissionInstanceGroupByOutputType[P]>
      }
    >
  >



export type PermissionInstanceWhereInput = {
  AND?: Prisma.PermissionInstanceWhereInput | Prisma.PermissionInstanceWhereInput[]
  OR?: Prisma.PermissionInstanceWhereInput[]
  NOT?: Prisma.PermissionInstanceWhereInput | Prisma.PermissionInstanceWhereInput[]
  id?: Prisma.IntFilter<"PermissionInstance"> | number
  accountId?: Prisma.IntFilter<"PermissionInstance"> | number
  containerId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
  appId?: Prisma.IntFilter<"PermissionInstance"> | number
  identifier?: Prisma.StringFilter<"PermissionInstance"> | string
  assetId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
  app?: Prisma.XOR<Prisma.AppScalarRelationFilter, Prisma.AppWhereInput>
  account?: Prisma.XOR<Prisma.AccountScalarRelationFilter, Prisma.AccountWhereInput>
  asset?: Prisma.XOR<Prisma.AssetNullableScalarRelationFilter, Prisma.AssetWhereInput> | null
  container?: Prisma.XOR<Prisma.ContainerNullableScalarRelationFilter, Prisma.ContainerWhereInput> | null
}

export type PermissionInstanceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrderInput | Prisma.SortOrder
  appId?: Prisma.SortOrder
  identifier?: Prisma.SortOrder
  assetId?: Prisma.SortOrderInput | Prisma.SortOrder
  app?: Prisma.AppOrderByWithRelationInput
  account?: Prisma.AccountOrderByWithRelationInput
  asset?: Prisma.AssetOrderByWithRelationInput
  container?: Prisma.ContainerOrderByWithRelationInput
}

export type PermissionInstanceWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  accountId_appId_identifier_containerId_assetId?: Prisma.PermissionInstanceAccountIdAppIdIdentifierContainerIdAssetIdCompoundUniqueInput
  AND?: Prisma.PermissionInstanceWhereInput | Prisma.PermissionInstanceWhereInput[]
  OR?: Prisma.PermissionInstanceWhereInput[]
  NOT?: Prisma.PermissionInstanceWhereInput | Prisma.PermissionInstanceWhereInput[]
  accountId?: Prisma.IntFilter<"PermissionInstance"> | number
  containerId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
  appId?: Prisma.IntFilter<"PermissionInstance"> | number
  identifier?: Prisma.StringFilter<"PermissionInstance"> | string
  assetId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
  app?: Prisma.XOR<Prisma.AppScalarRelationFilter, Prisma.AppWhereInput>
  account?: Prisma.XOR<Prisma.AccountScalarRelationFilter, Prisma.AccountWhereInput>
  asset?: Prisma.XOR<Prisma.AssetNullableScalarRelationFilter, Prisma.AssetWhereInput> | null
  container?: Prisma.XOR<Prisma.ContainerNullableScalarRelationFilter, Prisma.ContainerWhereInput> | null
}, "id" | "accountId_appId_identifier_containerId_assetId">

export type PermissionInstanceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrderInput | Prisma.SortOrder
  appId?: Prisma.SortOrder
  identifier?: Prisma.SortOrder
  assetId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.PermissionInstanceCountOrderByAggregateInput
  _avg?: Prisma.PermissionInstanceAvgOrderByAggregateInput
  _max?: Prisma.PermissionInstanceMaxOrderByAggregateInput
  _min?: Prisma.PermissionInstanceMinOrderByAggregateInput
  _sum?: Prisma.PermissionInstanceSumOrderByAggregateInput
}

export type PermissionInstanceScalarWhereWithAggregatesInput = {
  AND?: Prisma.PermissionInstanceScalarWhereWithAggregatesInput | Prisma.PermissionInstanceScalarWhereWithAggregatesInput[]
  OR?: Prisma.PermissionInstanceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PermissionInstanceScalarWhereWithAggregatesInput | Prisma.PermissionInstanceScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"PermissionInstance"> | number
  accountId?: Prisma.IntWithAggregatesFilter<"PermissionInstance"> | number
  containerId?: Prisma.IntNullableWithAggregatesFilter<"PermissionInstance"> | number | null
  appId?: Prisma.IntWithAggregatesFilter<"PermissionInstance"> | number
  identifier?: Prisma.StringWithAggregatesFilter<"PermissionInstance"> | string
  assetId?: Prisma.IntNullableWithAggregatesFilter<"PermissionInstance"> | number | null
}

export type PermissionInstanceCreateInput = {
  identifier: string
  app: Prisma.AppCreateNestedOneWithoutPermissionInstanceInput
  account: Prisma.AccountCreateNestedOneWithoutPermissionsInput
  asset?: Prisma.AssetCreateNestedOneWithoutPermissionInstanceInput
  container?: Prisma.ContainerCreateNestedOneWithoutPermissionInstanceInput
}

export type PermissionInstanceUncheckedCreateInput = {
  id?: number
  accountId: number
  containerId?: number | null
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceUpdateInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  app?: Prisma.AppUpdateOneRequiredWithoutPermissionInstanceNestedInput
  account?: Prisma.AccountUpdateOneRequiredWithoutPermissionsNestedInput
  asset?: Prisma.AssetUpdateOneWithoutPermissionInstanceNestedInput
  container?: Prisma.ContainerUpdateOneWithoutPermissionInstanceNestedInput
}

export type PermissionInstanceUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceCreateManyInput = {
  id?: number
  accountId: number
  containerId?: number | null
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceUpdateManyMutationInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PermissionInstanceUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceListRelationFilter = {
  every?: Prisma.PermissionInstanceWhereInput
  some?: Prisma.PermissionInstanceWhereInput
  none?: Prisma.PermissionInstanceWhereInput
}

export type PermissionInstanceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PermissionInstanceAccountIdAppIdIdentifierContainerIdAssetIdCompoundUniqueInput = {
  accountId: number
  appId: number
  identifier: string
  containerId: number
  assetId: number
}

export type PermissionInstanceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrder
  appId?: Prisma.SortOrder
  identifier?: Prisma.SortOrder
  assetId?: Prisma.SortOrder
}

export type PermissionInstanceAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrder
  appId?: Prisma.SortOrder
  assetId?: Prisma.SortOrder
}

export type PermissionInstanceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrder
  appId?: Prisma.SortOrder
  identifier?: Prisma.SortOrder
  assetId?: Prisma.SortOrder
}

export type PermissionInstanceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrder
  appId?: Prisma.SortOrder
  identifier?: Prisma.SortOrder
  assetId?: Prisma.SortOrder
}

export type PermissionInstanceSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  containerId?: Prisma.SortOrder
  appId?: Prisma.SortOrder
  assetId?: Prisma.SortOrder
}

export type PermissionInstanceCreateNestedManyWithoutAccountInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput> | Prisma.PermissionInstanceCreateWithoutAccountInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput | Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAccountInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUncheckedCreateNestedManyWithoutAccountInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput> | Prisma.PermissionInstanceCreateWithoutAccountInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput | Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAccountInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUpdateManyWithoutAccountNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput> | Prisma.PermissionInstanceCreateWithoutAccountInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput | Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAccountInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAccountInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAccountInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAccountInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAccountInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAccountInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAccountInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceUncheckedUpdateManyWithoutAccountNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput> | Prisma.PermissionInstanceCreateWithoutAccountInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput | Prisma.PermissionInstanceCreateOrConnectWithoutAccountInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAccountInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAccountInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAccountInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAccountInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAccountInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAccountInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAccountInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type PermissionInstanceCreateNestedManyWithoutAssetInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput> | Prisma.PermissionInstanceCreateWithoutAssetInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput | Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAssetInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUncheckedCreateNestedManyWithoutAssetInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput> | Prisma.PermissionInstanceCreateWithoutAssetInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput | Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAssetInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUpdateManyWithoutAssetNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput> | Prisma.PermissionInstanceCreateWithoutAssetInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput | Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAssetInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAssetInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAssetInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAssetInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAssetInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAssetInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAssetInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceUncheckedUpdateManyWithoutAssetNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput> | Prisma.PermissionInstanceCreateWithoutAssetInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput | Prisma.PermissionInstanceCreateOrConnectWithoutAssetInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAssetInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAssetInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAssetInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAssetInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAssetInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAssetInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAssetInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceCreateNestedManyWithoutContainerInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput> | Prisma.PermissionInstanceCreateWithoutContainerInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput | Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput[]
  createMany?: Prisma.PermissionInstanceCreateManyContainerInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUncheckedCreateNestedManyWithoutContainerInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput> | Prisma.PermissionInstanceCreateWithoutContainerInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput | Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput[]
  createMany?: Prisma.PermissionInstanceCreateManyContainerInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUpdateManyWithoutContainerNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput> | Prisma.PermissionInstanceCreateWithoutContainerInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput | Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutContainerInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutContainerInput[]
  createMany?: Prisma.PermissionInstanceCreateManyContainerInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutContainerInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutContainerInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutContainerInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutContainerInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceUncheckedUpdateManyWithoutContainerNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput> | Prisma.PermissionInstanceCreateWithoutContainerInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput | Prisma.PermissionInstanceCreateOrConnectWithoutContainerInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutContainerInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutContainerInput[]
  createMany?: Prisma.PermissionInstanceCreateManyContainerInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutContainerInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutContainerInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutContainerInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutContainerInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceCreateNestedManyWithoutAppInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput> | Prisma.PermissionInstanceCreateWithoutAppInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAppInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAppInput | Prisma.PermissionInstanceCreateOrConnectWithoutAppInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAppInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUncheckedCreateNestedManyWithoutAppInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput> | Prisma.PermissionInstanceCreateWithoutAppInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAppInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAppInput | Prisma.PermissionInstanceCreateOrConnectWithoutAppInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAppInputEnvelope
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
}

export type PermissionInstanceUpdateManyWithoutAppNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput> | Prisma.PermissionInstanceCreateWithoutAppInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAppInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAppInput | Prisma.PermissionInstanceCreateOrConnectWithoutAppInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAppInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAppInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAppInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAppInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAppInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAppInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAppInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceUncheckedUpdateManyWithoutAppNestedInput = {
  create?: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput> | Prisma.PermissionInstanceCreateWithoutAppInput[] | Prisma.PermissionInstanceUncheckedCreateWithoutAppInput[]
  connectOrCreate?: Prisma.PermissionInstanceCreateOrConnectWithoutAppInput | Prisma.PermissionInstanceCreateOrConnectWithoutAppInput[]
  upsert?: Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAppInput | Prisma.PermissionInstanceUpsertWithWhereUniqueWithoutAppInput[]
  createMany?: Prisma.PermissionInstanceCreateManyAppInputEnvelope
  set?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  disconnect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  delete?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  connect?: Prisma.PermissionInstanceWhereUniqueInput | Prisma.PermissionInstanceWhereUniqueInput[]
  update?: Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAppInput | Prisma.PermissionInstanceUpdateWithWhereUniqueWithoutAppInput[]
  updateMany?: Prisma.PermissionInstanceUpdateManyWithWhereWithoutAppInput | Prisma.PermissionInstanceUpdateManyWithWhereWithoutAppInput[]
  deleteMany?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
}

export type PermissionInstanceCreateWithoutAccountInput = {
  identifier: string
  app: Prisma.AppCreateNestedOneWithoutPermissionInstanceInput
  asset?: Prisma.AssetCreateNestedOneWithoutPermissionInstanceInput
  container?: Prisma.ContainerCreateNestedOneWithoutPermissionInstanceInput
}

export type PermissionInstanceUncheckedCreateWithoutAccountInput = {
  id?: number
  containerId?: number | null
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceCreateOrConnectWithoutAccountInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput>
}

export type PermissionInstanceCreateManyAccountInputEnvelope = {
  data: Prisma.PermissionInstanceCreateManyAccountInput | Prisma.PermissionInstanceCreateManyAccountInput[]
  skipDuplicates?: boolean
}

export type PermissionInstanceUpsertWithWhereUniqueWithoutAccountInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAccountInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAccountInput>
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAccountInput, Prisma.PermissionInstanceUncheckedCreateWithoutAccountInput>
}

export type PermissionInstanceUpdateWithWhereUniqueWithoutAccountInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAccountInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAccountInput>
}

export type PermissionInstanceUpdateManyWithWhereWithoutAccountInput = {
  where: Prisma.PermissionInstanceScalarWhereInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyWithoutAccountInput>
}

export type PermissionInstanceScalarWhereInput = {
  AND?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
  OR?: Prisma.PermissionInstanceScalarWhereInput[]
  NOT?: Prisma.PermissionInstanceScalarWhereInput | Prisma.PermissionInstanceScalarWhereInput[]
  id?: Prisma.IntFilter<"PermissionInstance"> | number
  accountId?: Prisma.IntFilter<"PermissionInstance"> | number
  containerId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
  appId?: Prisma.IntFilter<"PermissionInstance"> | number
  identifier?: Prisma.StringFilter<"PermissionInstance"> | string
  assetId?: Prisma.IntNullableFilter<"PermissionInstance"> | number | null
}

export type PermissionInstanceCreateWithoutAssetInput = {
  identifier: string
  app: Prisma.AppCreateNestedOneWithoutPermissionInstanceInput
  account: Prisma.AccountCreateNestedOneWithoutPermissionsInput
  container?: Prisma.ContainerCreateNestedOneWithoutPermissionInstanceInput
}

export type PermissionInstanceUncheckedCreateWithoutAssetInput = {
  id?: number
  accountId: number
  containerId?: number | null
  appId: number
  identifier: string
}

export type PermissionInstanceCreateOrConnectWithoutAssetInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput>
}

export type PermissionInstanceCreateManyAssetInputEnvelope = {
  data: Prisma.PermissionInstanceCreateManyAssetInput | Prisma.PermissionInstanceCreateManyAssetInput[]
  skipDuplicates?: boolean
}

export type PermissionInstanceUpsertWithWhereUniqueWithoutAssetInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAssetInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAssetInput>
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAssetInput, Prisma.PermissionInstanceUncheckedCreateWithoutAssetInput>
}

export type PermissionInstanceUpdateWithWhereUniqueWithoutAssetInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAssetInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAssetInput>
}

export type PermissionInstanceUpdateManyWithWhereWithoutAssetInput = {
  where: Prisma.PermissionInstanceScalarWhereInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyWithoutAssetInput>
}

export type PermissionInstanceCreateWithoutContainerInput = {
  identifier: string
  app: Prisma.AppCreateNestedOneWithoutPermissionInstanceInput
  account: Prisma.AccountCreateNestedOneWithoutPermissionsInput
  asset?: Prisma.AssetCreateNestedOneWithoutPermissionInstanceInput
}

export type PermissionInstanceUncheckedCreateWithoutContainerInput = {
  id?: number
  accountId: number
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceCreateOrConnectWithoutContainerInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput>
}

export type PermissionInstanceCreateManyContainerInputEnvelope = {
  data: Prisma.PermissionInstanceCreateManyContainerInput | Prisma.PermissionInstanceCreateManyContainerInput[]
  skipDuplicates?: boolean
}

export type PermissionInstanceUpsertWithWhereUniqueWithoutContainerInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutContainerInput, Prisma.PermissionInstanceUncheckedUpdateWithoutContainerInput>
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutContainerInput, Prisma.PermissionInstanceUncheckedCreateWithoutContainerInput>
}

export type PermissionInstanceUpdateWithWhereUniqueWithoutContainerInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutContainerInput, Prisma.PermissionInstanceUncheckedUpdateWithoutContainerInput>
}

export type PermissionInstanceUpdateManyWithWhereWithoutContainerInput = {
  where: Prisma.PermissionInstanceScalarWhereInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyWithoutContainerInput>
}

export type PermissionInstanceCreateWithoutAppInput = {
  identifier: string
  account: Prisma.AccountCreateNestedOneWithoutPermissionsInput
  asset?: Prisma.AssetCreateNestedOneWithoutPermissionInstanceInput
  container?: Prisma.ContainerCreateNestedOneWithoutPermissionInstanceInput
}

export type PermissionInstanceUncheckedCreateWithoutAppInput = {
  id?: number
  accountId: number
  containerId?: number | null
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceCreateOrConnectWithoutAppInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput>
}

export type PermissionInstanceCreateManyAppInputEnvelope = {
  data: Prisma.PermissionInstanceCreateManyAppInput | Prisma.PermissionInstanceCreateManyAppInput[]
  skipDuplicates?: boolean
}

export type PermissionInstanceUpsertWithWhereUniqueWithoutAppInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAppInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAppInput>
  create: Prisma.XOR<Prisma.PermissionInstanceCreateWithoutAppInput, Prisma.PermissionInstanceUncheckedCreateWithoutAppInput>
}

export type PermissionInstanceUpdateWithWhereUniqueWithoutAppInput = {
  where: Prisma.PermissionInstanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateWithoutAppInput, Prisma.PermissionInstanceUncheckedUpdateWithoutAppInput>
}

export type PermissionInstanceUpdateManyWithWhereWithoutAppInput = {
  where: Prisma.PermissionInstanceScalarWhereInput
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyWithoutAppInput>
}

export type PermissionInstanceCreateManyAccountInput = {
  id?: number
  containerId?: number | null
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceUpdateWithoutAccountInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  app?: Prisma.AppUpdateOneRequiredWithoutPermissionInstanceNestedInput
  asset?: Prisma.AssetUpdateOneWithoutPermissionInstanceNestedInput
  container?: Prisma.ContainerUpdateOneWithoutPermissionInstanceNestedInput
}

export type PermissionInstanceUncheckedUpdateWithoutAccountInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceUncheckedUpdateManyWithoutAccountInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceCreateManyAssetInput = {
  id?: number
  accountId: number
  containerId?: number | null
  appId: number
  identifier: string
}

export type PermissionInstanceUpdateWithoutAssetInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  app?: Prisma.AppUpdateOneRequiredWithoutPermissionInstanceNestedInput
  account?: Prisma.AccountUpdateOneRequiredWithoutPermissionsNestedInput
  container?: Prisma.ContainerUpdateOneWithoutPermissionInstanceNestedInput
}

export type PermissionInstanceUncheckedUpdateWithoutAssetInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PermissionInstanceUncheckedUpdateManyWithoutAssetInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PermissionInstanceCreateManyContainerInput = {
  id?: number
  accountId: number
  appId: number
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceUpdateWithoutContainerInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  app?: Prisma.AppUpdateOneRequiredWithoutPermissionInstanceNestedInput
  account?: Prisma.AccountUpdateOneRequiredWithoutPermissionsNestedInput
  asset?: Prisma.AssetUpdateOneWithoutPermissionInstanceNestedInput
}

export type PermissionInstanceUncheckedUpdateWithoutContainerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceUncheckedUpdateManyWithoutContainerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  appId?: Prisma.IntFieldUpdateOperationsInput | number
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceCreateManyAppInput = {
  id?: number
  accountId: number
  containerId?: number | null
  identifier: string
  assetId?: number | null
}

export type PermissionInstanceUpdateWithoutAppInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  account?: Prisma.AccountUpdateOneRequiredWithoutPermissionsNestedInput
  asset?: Prisma.AssetUpdateOneWithoutPermissionInstanceNestedInput
  container?: Prisma.ContainerUpdateOneWithoutPermissionInstanceNestedInput
}

export type PermissionInstanceUncheckedUpdateWithoutAppInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type PermissionInstanceUncheckedUpdateManyWithoutAppInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  accountId?: Prisma.IntFieldUpdateOperationsInput | number
  containerId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  identifier?: Prisma.StringFieldUpdateOperationsInput | string
  assetId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}



export type PermissionInstanceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  containerId?: boolean
  appId?: boolean
  identifier?: boolean
  assetId?: boolean
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}, ExtArgs["result"]["permissionInstance"]>

export type PermissionInstanceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  containerId?: boolean
  appId?: boolean
  identifier?: boolean
  assetId?: boolean
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}, ExtArgs["result"]["permissionInstance"]>

export type PermissionInstanceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  containerId?: boolean
  appId?: boolean
  identifier?: boolean
  assetId?: boolean
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}, ExtArgs["result"]["permissionInstance"]>

export type PermissionInstanceSelectScalar = {
  id?: boolean
  accountId?: boolean
  containerId?: boolean
  appId?: boolean
  identifier?: boolean
  assetId?: boolean
}

export type PermissionInstanceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "accountId" | "containerId" | "appId" | "identifier" | "assetId", ExtArgs["result"]["permissionInstance"]>
export type PermissionInstanceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}
export type PermissionInstanceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}
export type PermissionInstanceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  app?: boolean | Prisma.AppDefaultArgs<ExtArgs>
  account?: boolean | Prisma.AccountDefaultArgs<ExtArgs>
  asset?: boolean | Prisma.PermissionInstance$assetArgs<ExtArgs>
  container?: boolean | Prisma.PermissionInstance$containerArgs<ExtArgs>
}

export type $PermissionInstancePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PermissionInstance"
  objects: {
    app: Prisma.$AppPayload<ExtArgs>
    account: Prisma.$AccountPayload<ExtArgs>
    asset: Prisma.$AssetPayload<ExtArgs> | null
    container: Prisma.$ContainerPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    accountId: number
    containerId: number | null
    appId: number
    identifier: string
    assetId: number | null
  }, ExtArgs["result"]["permissionInstance"]>
  composites: {}
}

export type PermissionInstanceGetPayload<S extends boolean | null | undefined | PermissionInstanceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload, S>

export type PermissionInstanceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PermissionInstanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PermissionInstanceCountAggregateInputType | true
  }

export interface PermissionInstanceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PermissionInstance'], meta: { name: 'PermissionInstance' } }
  /**
   * Find zero or one PermissionInstance that matches the filter.
   * @param {PermissionInstanceFindUniqueArgs} args - Arguments to find a PermissionInstance
   * @example
   * // Get one PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PermissionInstanceFindUniqueArgs>(args: Prisma.SelectSubset<T, PermissionInstanceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PermissionInstance that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PermissionInstanceFindUniqueOrThrowArgs} args - Arguments to find a PermissionInstance
   * @example
   * // Get one PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PermissionInstanceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PermissionInstanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PermissionInstance that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceFindFirstArgs} args - Arguments to find a PermissionInstance
   * @example
   * // Get one PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PermissionInstanceFindFirstArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceFindFirstArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PermissionInstance that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceFindFirstOrThrowArgs} args - Arguments to find a PermissionInstance
   * @example
   * // Get one PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PermissionInstanceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PermissionInstances that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PermissionInstances
   * const permissionInstances = await prisma.permissionInstance.findMany()
   * 
   * // Get first 10 PermissionInstances
   * const permissionInstances = await prisma.permissionInstance.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const permissionInstanceWithIdOnly = await prisma.permissionInstance.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PermissionInstanceFindManyArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PermissionInstance.
   * @param {PermissionInstanceCreateArgs} args - Arguments to create a PermissionInstance.
   * @example
   * // Create one PermissionInstance
   * const PermissionInstance = await prisma.permissionInstance.create({
   *   data: {
   *     // ... data to create a PermissionInstance
   *   }
   * })
   * 
   */
  create<T extends PermissionInstanceCreateArgs>(args: Prisma.SelectSubset<T, PermissionInstanceCreateArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PermissionInstances.
   * @param {PermissionInstanceCreateManyArgs} args - Arguments to create many PermissionInstances.
   * @example
   * // Create many PermissionInstances
   * const permissionInstance = await prisma.permissionInstance.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PermissionInstanceCreateManyArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PermissionInstances and returns the data saved in the database.
   * @param {PermissionInstanceCreateManyAndReturnArgs} args - Arguments to create many PermissionInstances.
   * @example
   * // Create many PermissionInstances
   * const permissionInstance = await prisma.permissionInstance.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PermissionInstances and only return the `id`
   * const permissionInstanceWithIdOnly = await prisma.permissionInstance.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PermissionInstanceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PermissionInstance.
   * @param {PermissionInstanceDeleteArgs} args - Arguments to delete one PermissionInstance.
   * @example
   * // Delete one PermissionInstance
   * const PermissionInstance = await prisma.permissionInstance.delete({
   *   where: {
   *     // ... filter to delete one PermissionInstance
   *   }
   * })
   * 
   */
  delete<T extends PermissionInstanceDeleteArgs>(args: Prisma.SelectSubset<T, PermissionInstanceDeleteArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PermissionInstance.
   * @param {PermissionInstanceUpdateArgs} args - Arguments to update one PermissionInstance.
   * @example
   * // Update one PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PermissionInstanceUpdateArgs>(args: Prisma.SelectSubset<T, PermissionInstanceUpdateArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PermissionInstances.
   * @param {PermissionInstanceDeleteManyArgs} args - Arguments to filter PermissionInstances to delete.
   * @example
   * // Delete a few PermissionInstances
   * const { count } = await prisma.permissionInstance.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PermissionInstanceDeleteManyArgs>(args?: Prisma.SelectSubset<T, PermissionInstanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PermissionInstances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PermissionInstances
   * const permissionInstance = await prisma.permissionInstance.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PermissionInstanceUpdateManyArgs>(args: Prisma.SelectSubset<T, PermissionInstanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PermissionInstances and returns the data updated in the database.
   * @param {PermissionInstanceUpdateManyAndReturnArgs} args - Arguments to update many PermissionInstances.
   * @example
   * // Update many PermissionInstances
   * const permissionInstance = await prisma.permissionInstance.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PermissionInstances and only return the `id`
   * const permissionInstanceWithIdOnly = await prisma.permissionInstance.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PermissionInstanceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PermissionInstanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PermissionInstance.
   * @param {PermissionInstanceUpsertArgs} args - Arguments to update or create a PermissionInstance.
   * @example
   * // Update or create a PermissionInstance
   * const permissionInstance = await prisma.permissionInstance.upsert({
   *   create: {
   *     // ... data to create a PermissionInstance
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PermissionInstance we want to update
   *   }
   * })
   */
  upsert<T extends PermissionInstanceUpsertArgs>(args: Prisma.SelectSubset<T, PermissionInstanceUpsertArgs<ExtArgs>>): Prisma.Prisma__PermissionInstanceClient<runtime.Types.Result.GetResult<Prisma.$PermissionInstancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PermissionInstances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceCountArgs} args - Arguments to filter PermissionInstances to count.
   * @example
   * // Count the number of PermissionInstances
   * const count = await prisma.permissionInstance.count({
   *   where: {
   *     // ... the filter for the PermissionInstances we want to count
   *   }
   * })
  **/
  count<T extends PermissionInstanceCountArgs>(
    args?: Prisma.Subset<T, PermissionInstanceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PermissionInstanceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PermissionInstance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PermissionInstanceAggregateArgs>(args: Prisma.Subset<T, PermissionInstanceAggregateArgs>): Prisma.PrismaPromise<GetPermissionInstanceAggregateType<T>>

  /**
   * Group by PermissionInstance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PermissionInstanceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PermissionInstanceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PermissionInstanceGroupByArgs['orderBy'] }
      : { orderBy?: PermissionInstanceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PermissionInstanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionInstanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PermissionInstance model
 */
readonly fields: PermissionInstanceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PermissionInstance.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PermissionInstanceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  app<T extends Prisma.AppDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AppDefaultArgs<ExtArgs>>): Prisma.Prisma__AppClient<runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  account<T extends Prisma.AccountDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AccountDefaultArgs<ExtArgs>>): Prisma.Prisma__AccountClient<runtime.Types.Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  asset<T extends Prisma.PermissionInstance$assetArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PermissionInstance$assetArgs<ExtArgs>>): Prisma.Prisma__AssetClient<runtime.Types.Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  container<T extends Prisma.PermissionInstance$containerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PermissionInstance$containerArgs<ExtArgs>>): Prisma.Prisma__ContainerClient<runtime.Types.Result.GetResult<Prisma.$ContainerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PermissionInstance model
 */
export interface PermissionInstanceFieldRefs {
  readonly id: Prisma.FieldRef<"PermissionInstance", 'Int'>
  readonly accountId: Prisma.FieldRef<"PermissionInstance", 'Int'>
  readonly containerId: Prisma.FieldRef<"PermissionInstance", 'Int'>
  readonly appId: Prisma.FieldRef<"PermissionInstance", 'Int'>
  readonly identifier: Prisma.FieldRef<"PermissionInstance", 'String'>
  readonly assetId: Prisma.FieldRef<"PermissionInstance", 'Int'>
}
    

// Custom InputTypes
/**
 * PermissionInstance findUnique
 */
export type PermissionInstanceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter, which PermissionInstance to fetch.
   */
  where: Prisma.PermissionInstanceWhereUniqueInput
}

/**
 * PermissionInstance findUniqueOrThrow
 */
export type PermissionInstanceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter, which PermissionInstance to fetch.
   */
  where: Prisma.PermissionInstanceWhereUniqueInput
}

/**
 * PermissionInstance findFirst
 */
export type PermissionInstanceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter, which PermissionInstance to fetch.
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PermissionInstances to fetch.
   */
  orderBy?: Prisma.PermissionInstanceOrderByWithRelationInput | Prisma.PermissionInstanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PermissionInstances.
   */
  cursor?: Prisma.PermissionInstanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PermissionInstances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PermissionInstances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PermissionInstances.
   */
  distinct?: Prisma.PermissionInstanceScalarFieldEnum | Prisma.PermissionInstanceScalarFieldEnum[]
}

/**
 * PermissionInstance findFirstOrThrow
 */
export type PermissionInstanceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter, which PermissionInstance to fetch.
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PermissionInstances to fetch.
   */
  orderBy?: Prisma.PermissionInstanceOrderByWithRelationInput | Prisma.PermissionInstanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PermissionInstances.
   */
  cursor?: Prisma.PermissionInstanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PermissionInstances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PermissionInstances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PermissionInstances.
   */
  distinct?: Prisma.PermissionInstanceScalarFieldEnum | Prisma.PermissionInstanceScalarFieldEnum[]
}

/**
 * PermissionInstance findMany
 */
export type PermissionInstanceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter, which PermissionInstances to fetch.
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PermissionInstances to fetch.
   */
  orderBy?: Prisma.PermissionInstanceOrderByWithRelationInput | Prisma.PermissionInstanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PermissionInstances.
   */
  cursor?: Prisma.PermissionInstanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PermissionInstances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PermissionInstances.
   */
  skip?: number
  distinct?: Prisma.PermissionInstanceScalarFieldEnum | Prisma.PermissionInstanceScalarFieldEnum[]
}

/**
 * PermissionInstance create
 */
export type PermissionInstanceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * The data needed to create a PermissionInstance.
   */
  data: Prisma.XOR<Prisma.PermissionInstanceCreateInput, Prisma.PermissionInstanceUncheckedCreateInput>
}

/**
 * PermissionInstance createMany
 */
export type PermissionInstanceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PermissionInstances.
   */
  data: Prisma.PermissionInstanceCreateManyInput | Prisma.PermissionInstanceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PermissionInstance createManyAndReturn
 */
export type PermissionInstanceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * The data used to create many PermissionInstances.
   */
  data: Prisma.PermissionInstanceCreateManyInput | Prisma.PermissionInstanceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PermissionInstance update
 */
export type PermissionInstanceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * The data needed to update a PermissionInstance.
   */
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateInput, Prisma.PermissionInstanceUncheckedUpdateInput>
  /**
   * Choose, which PermissionInstance to update.
   */
  where: Prisma.PermissionInstanceWhereUniqueInput
}

/**
 * PermissionInstance updateMany
 */
export type PermissionInstanceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PermissionInstances.
   */
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyInput>
  /**
   * Filter which PermissionInstances to update
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * Limit how many PermissionInstances to update.
   */
  limit?: number
}

/**
 * PermissionInstance updateManyAndReturn
 */
export type PermissionInstanceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * The data used to update PermissionInstances.
   */
  data: Prisma.XOR<Prisma.PermissionInstanceUpdateManyMutationInput, Prisma.PermissionInstanceUncheckedUpdateManyInput>
  /**
   * Filter which PermissionInstances to update
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * Limit how many PermissionInstances to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PermissionInstance upsert
 */
export type PermissionInstanceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * The filter to search for the PermissionInstance to update in case it exists.
   */
  where: Prisma.PermissionInstanceWhereUniqueInput
  /**
   * In case the PermissionInstance found by the `where` argument doesn't exist, create a new PermissionInstance with this data.
   */
  create: Prisma.XOR<Prisma.PermissionInstanceCreateInput, Prisma.PermissionInstanceUncheckedCreateInput>
  /**
   * In case the PermissionInstance was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PermissionInstanceUpdateInput, Prisma.PermissionInstanceUncheckedUpdateInput>
}

/**
 * PermissionInstance delete
 */
export type PermissionInstanceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
  /**
   * Filter which PermissionInstance to delete.
   */
  where: Prisma.PermissionInstanceWhereUniqueInput
}

/**
 * PermissionInstance deleteMany
 */
export type PermissionInstanceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PermissionInstances to delete
   */
  where?: Prisma.PermissionInstanceWhereInput
  /**
   * Limit how many PermissionInstances to delete.
   */
  limit?: number
}

/**
 * PermissionInstance.asset
 */
export type PermissionInstance$assetArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Asset
   */
  select?: Prisma.AssetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Asset
   */
  omit?: Prisma.AssetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssetInclude<ExtArgs> | null
  where?: Prisma.AssetWhereInput
}

/**
 * PermissionInstance.container
 */
export type PermissionInstance$containerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Container
   */
  select?: Prisma.ContainerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Container
   */
  omit?: Prisma.ContainerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContainerInclude<ExtArgs> | null
  where?: Prisma.ContainerWhereInput
}

/**
 * PermissionInstance without action
 */
export type PermissionInstanceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PermissionInstance
   */
  select?: Prisma.PermissionInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PermissionInstance
   */
  omit?: Prisma.PermissionInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInstanceInclude<ExtArgs> | null
}
